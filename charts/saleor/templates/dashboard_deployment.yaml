{{- if .Values.dashboard.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "saleor.fullname" . }}-dashboard
  labels:
    {{- include "saleor.labels" . | nindent 4 }}
    app.kubernetes.io/component: dashboard
spec:
  {{- if not .Values.dashboard.autoscaling.enabled }}
  replicas: {{ .Values.dashboard.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "saleor.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: dashboard
  template:
    metadata:
      {{- with .Values.dashboard.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "saleor.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: dashboard
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "saleor.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.dashboard.securityContext | nindent 8 }}
      {{- if gt (int .Values.dashboard.replicaCount) 1 }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - dashboard
              topologyKey: kubernetes.io/hostname
      {{- end }}
      {{- if .Values.dashboard.initContainers }}
      initContainers:
        {{- toYaml .Values.dashboard.initContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}-dashboard
          securityContext:
            {{- toYaml .Values.dashboard.securityContext | nindent 12 }}
          image: "{{ .Values.dashboard.image.repository }}:{{ .Values.dashboard.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.dashboard.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.dashboard.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml .Values.dashboard.resources | nindent 12 }}
          env:
            - name: API_URL
              value: {{ if .Values.ingress.api.tls }}https{{ else }}http{{ end }}://{{ (index .Values.ingress.api.hosts 0).host }}/graphql/
            {{- if .Values.dashboard.extraEnv }}
            {{- toYaml .Values.dashboard.extraEnv | nindent 12 }}
            {{- end }}
          {{- if .Values.dashboard.volumeMounts }}
          volumeMounts:
            {{- toYaml .Values.dashboard.volumeMounts | nindent 12 }}
          {{- end }}
      {{- if .Values.dashboard.volumes }}
      volumes:
        {{- toYaml .Values.dashboard.volumes | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
