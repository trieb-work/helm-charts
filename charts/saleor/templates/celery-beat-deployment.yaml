{{- if .Values.worker.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "saleor.fullname" . }}-celery-beat
  labels:
    {{- include "saleor.labels" . | nindent 4 }}
    app.kubernetes.io/component: celery-beat
spec:
  replicas: 1
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  selector:
    matchLabels:
      {{- include "saleor.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: celery-beat
  template:
    metadata:
      {{- with .Values.worker.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "saleor.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: celery-beat
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "saleor.serviceAccountName" . }}
      securityContext:
        runAsUser: 0
        runAsGroup: 0
      containers:
        - name: {{ .Chart.Name }}-celery-beat
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ .Values.worker.image.repository }}:{{ .Values.worker.image.tag }}
          imagePullPolicy: {{ .Values.worker.image.pullPolicy }}
          command: ["celery", "--app", "saleor.celeryconf:app", "beat", "--scheduler", "saleor.schedulers.schedulers.DatabaseScheduler"]
          resources:
            requests:
              cpu: {{ .Values.worker.scheduler.resources.requests.cpu }}
              memory: {{ .Values.worker.scheduler.resources.requests.memory }}
            limits:
              cpu: {{ .Values.worker.scheduler.resources.limits.cpu }}
              memory: {{ .Values.worker.scheduler.resources.limits.memory }}
          env:
            {{- include "saleor.celery.env" . | nindent 12 }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
